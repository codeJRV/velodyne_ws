[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:38:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KConstPtr[m[Kâ€™ in namespace â€˜[01m[Ksensor_msgs[m[Kâ€™ does not name a type
     void cloudCB(const sensor_msgs::ConstPtr& input)
[01;32m[K                                     ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:[m[K In member function â€˜[01m[Kvoid cloudHandler::cloudCB(const int&)[m[Kâ€™:
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:44:37:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KfromROSMsg(const int&, pcl::PointCloud<pcl::PointXYZ>&)[m[Kâ€™
         pcl::fromROSMsg(input, cloud);
[01;32m[K                                     ^[m[K
In file included from [01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:5:0[m[K:
[01m[K/opt/ros/kinetic/include/pcl_conversions/pcl_conversions.h:547:8:[m[K [01;36m[Knote: [m[Kcandidate: template<class T> void pcl::fromROSMsg(const PointCloud2&, pcl::PointCloud<PointT>&)
   void fromROSMsg(const sensor_msgs::PointCloud2 &cloud, pcl::PointCloud<T> &pcl_cloud)
[01;32m[K        ^[m[K
[01m[K/opt/ros/kinetic/include/pcl_conversions/pcl_conversions.h:547:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:44:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kinput[m[Kâ€™ (type â€˜[01m[Kconst int[m[Kâ€™) to type â€˜[01m[Kconst PointCloud2& {aka const sensor_msgs::PointCloud2_<std::allocator<void> >&}[m[Kâ€™
         pcl::fromROSMsg(input, cloud);
[01;32m[K                                     ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:48:36:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
         output.header.stamp = input->header.stamp;
[01;32m[K                                    ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:49:39:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
         output.header.frame_id = input->header.frame_id;
[01;32m[K                                       ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:52:37:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
         for (size_t i = 0; i < input->points.size(); ++i)
[01;32m[K                                     ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:54:38:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
             cloud.points[i].x = input->points[i].x;
[01;32m[K                                      ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:55:38:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
             cloud.points[i].y = input->points[i].y;
[01;32m[K                                      ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:56:38:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
             cloud.points[i].z = input->points[i].z;
[01;32m[K                                      ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:61:22:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
             if (input->points[i].ring != 0 && input->points[i].ring != 1)
[01;32m[K                      ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:61:52:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ is not a pointer
             if (input->points[i].ring != 0 && input->points[i].ring != 1)
[01;32m[K                                                    ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:63:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksensor_msgs::PointCloud2 {aka struct sensor_msgs::PointCloud2_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
                     output.points.push_back(cloud.points[i]);
[01;32m[K                            ^[m[K
In file included from [01m[K/opt/ros/kinetic/include/ros/serialization.h:37:0[m[K,
                 from [01m[K/opt/ros/kinetic/include/ros/publisher.h:34[m[K,
                 from [01m[K/opt/ros/kinetic/include/ros/node_handle.h:32[m[K,
                 from [01m[K/opt/ros/kinetic/include/ros/ros.h:45[m[K,
                 from [01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:1[m[K:
/opt/ros/kinetic/include/ros/message_traits.h: In instantiation of â€˜[01m[Kstatic const char* ros::message_traits::MD5Sum<M>::value() [with M = int][m[Kâ€™:
[01m[K/opt/ros/kinetic/include/ros/message_traits.h:228:102:[m[K   required from â€˜[01m[Kconst char* ros::message_traits::md5sum() [with M = int][m[Kâ€™
[01m[K/opt/ros/kinetic/include/ros/subscribe_options.h:89:49:[m[K   required from â€˜[01m[Kvoid ros::SubscribeOptions::initByFullCallbackType(const string&, uint32_t, const boost::function<void(P)>&, const boost::function<boost::shared_ptr<typename ros::ParameterAdapter<P>::Message>()>&) [with P = const int&; std::__cxx11::string = std::__cxx11::basic_string<char>; uint32_t = unsigned int; typename ros::ParameterAdapter<P>::Message = int][m[Kâ€™
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:406:5:[m[K   required from â€˜[01m[Kros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M), T*, const ros::TransportHints&) [with M = const int&; T = cloudHandler; std::__cxx11::string = std::__cxx11::basic_string<char>; uint32_t = unsigned int][m[Kâ€™
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:34:84:[m[K   required from here
[01m[K/opt/ros/kinetic/include/ros/message_traits.h:121:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K__s_getMD5Sum[m[Kâ€™ is not a member of â€˜[01m[Kint[m[Kâ€™
     return M::__s_getMD5Sum().c_str();
[01;32m[K                            ^[m[K
/opt/ros/kinetic/include/ros/message_traits.h: In instantiation of â€˜[01m[Kstatic const char* ros::message_traits::DataType<M>::value() [with M = int][m[Kâ€™:
[01m[K/opt/ros/kinetic/include/ros/message_traits.h:237:104:[m[K   required from â€˜[01m[Kconst char* ros::message_traits::datatype() [with M = int][m[Kâ€™
[01m[K/opt/ros/kinetic/include/ros/subscribe_options.h:90:53:[m[K   required from â€˜[01m[Kvoid ros::SubscribeOptions::initByFullCallbackType(const string&, uint32_t, const boost::function<void(P)>&, const boost::function<boost::shared_ptr<typename ros::ParameterAdapter<P>::Message>()>&) [with P = const int&; std::__cxx11::string = std::__cxx11::basic_string<char>; uint32_t = unsigned int; typename ros::ParameterAdapter<P>::Message = int][m[Kâ€™
[01m[K/opt/ros/kinetic/include/ros/node_handle.h:406:5:[m[K   required from â€˜[01m[Kros::Subscriber ros::NodeHandle::subscribe(const string&, uint32_t, void (T::*)(M), T*, const ros::TransportHints&) [with M = const int&; T = cloudHandler; std::__cxx11::string = std::__cxx11::basic_string<char>; uint32_t = unsigned int][m[Kâ€™
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:34:84:[m[K   required from here
[01m[K/opt/ros/kinetic/include/ros/message_traits.h:138:30:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K__s_getDataType[m[Kâ€™ is not a member of â€˜[01m[Kint[m[Kâ€™
     return M::__s_getDataType().c_str();
[01;32m[K                              ^[m[K
make[2]: *** [CMakeFiles/a1.dir/src/a1.cpp.o] Error 1
make[1]: *** [CMakeFiles/a1.dir/all] Error 2
make: *** [all] Error 2
