[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:[m[K In member function â€˜[01m[Kvoid cloudHandler::cloudCB(const PointCloud2ConstPtr&)[m[Kâ€™:
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:44:37:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KfromROSMsg(const PointCloud2ConstPtr&, pcl::PointCloud<pcl::PointXYZ>&)[m[Kâ€™
         pcl::fromROSMsg(input, cloud);
[01;32m[K                                     ^[m[K
In file included from [01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:5:0[m[K:
[01m[K/opt/ros/kinetic/include/pcl_conversions/pcl_conversions.h:547:8:[m[K [01;36m[Knote: [m[Kcandidate: template<class T> void pcl::fromROSMsg(const PointCloud2&, pcl::PointCloud<PointT>&)
   void fromROSMsg(const sensor_msgs::PointCloud2 &cloud, pcl::PointCloud<T> &pcl_cloud)
[01;32m[K        ^[m[K
[01m[K/opt/ros/kinetic/include/pcl_conversions/pcl_conversions.h:547:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:44:37:[m[K [01;36m[Knote: [m[K  cannot convert â€˜[01m[Kinput[m[Kâ€™ (type â€˜[01m[Kconst PointCloud2ConstPtr {aka const boost::shared_ptr<const sensor_msgs::PointCloud2_<std::allocator<void> > >}[m[Kâ€™) to type â€˜[01m[Kconst PointCloud2& {aka const sensor_msgs::PointCloud2_<std::allocator<void> >&}[m[Kâ€™
         pcl::fromROSMsg(input, cloud);
[01;32m[K                                     ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:52:39:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst struct sensor_msgs::PointCloud2_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
         for (size_t i = 0; i < input->points.size(); ++i)
[01;32m[K                                       ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:54:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst struct sensor_msgs::PointCloud2_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
             cloud.points[i].x = input->points[i].x;
[01;32m[K                                        ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:55:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst struct sensor_msgs::PointCloud2_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
             cloud.points[i].y = input->points[i].y;
[01;32m[K                                        ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:56:40:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst struct sensor_msgs::PointCloud2_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
             cloud.points[i].z = input->points[i].z;
[01;32m[K                                        ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:61:24:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst struct sensor_msgs::PointCloud2_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
             if (input->points[i].ring != 0 && input->points[i].ring != 1)
[01;32m[K                        ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:61:54:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst struct sensor_msgs::PointCloud2_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
             if (input->points[i].ring != 0 && input->points[i].ring != 1)
[01;32m[K                                                      ^[m[K
[01m[K/home/jrv/Research/Velodyne/velodyne_ws/src/lidar_sp/src/a1.cpp:63:28:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ksensor_msgs::PointCloud2 {aka struct sensor_msgs::PointCloud2_<std::allocator<void> >}[m[Kâ€™ has no member named â€˜[01m[Kpoints[m[Kâ€™
                     output.points.push_back(cloud.points[i]);
[01;32m[K                            ^[m[K
make[2]: *** [CMakeFiles/a1.dir/src/a1.cpp.o] Error 1
make[1]: *** [CMakeFiles/a1.dir/all] Error 2
make: *** [all] Error 2
